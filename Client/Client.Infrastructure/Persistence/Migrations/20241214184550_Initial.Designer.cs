// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ClientDbContext))]
    [Migration("20241214184550_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.Property<string>("Identification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Identification");

                    b.HasKey("Identification");

                    b.ToTable("Persons", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.HasBaseType("Domain.Entities.Person");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Domain.Entities.Person", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<string>("PersonIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Address");

                            b1.HasKey("PersonIdentification");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdentification");
                        });

                    b.OwnsOne("Domain.ValueObjects.Age", "Age", b1 =>
                        {
                            b1.Property<string>("PersonIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Age");

                            b1.HasKey("PersonIdentification");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdentification");
                        });

                    b.OwnsOne("Domain.ValueObjects.GenderValue", "Gender", b1 =>
                        {
                            b1.Property<string>("PersonIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Gender");

                            b1.HasKey("PersonIdentification");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdentification");
                        });

                    b.OwnsOne("Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<string>("PersonIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Name");

                            b1.HasKey("PersonIdentification");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdentification");
                        });

                    b.OwnsOne("Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<string>("PersonIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("PersonIdentification");

                            b1.ToTable("Persons");

                            b1.WithOwner()
                                .HasForeignKey("PersonIdentification");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Age")
                        .IsRequired();

                    b.Navigation("Gender")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.HasOne("Domain.Entities.Person", null)
                        .WithOne()
                        .HasForeignKey("Domain.Entities.Client", "Identification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<string>("ClientIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Password");

                            b1.HasKey("ClientIdentification");

                            b1.ToTable("Clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientIdentification");
                        });

                    b.OwnsOne("Domain.ValueObjects.Username", "Username", b1 =>
                        {
                            b1.Property<string>("ClientIdentification")
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Username");

                            b1.HasKey("ClientIdentification");

                            b1.ToTable("Clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientIdentification");
                        });

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Username")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
